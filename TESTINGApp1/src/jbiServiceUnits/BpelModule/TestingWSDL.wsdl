<?xml version="1.0" encoding="UTF-8"?>
<definitions name="TestingWSDL" targetNamespace="http://testing.ws"
    xmlns="http://schemas.xmlsoap.org/wsdl/"
    xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://testing.ws" xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns0="http://types.lameduck.group8.ws.dtu" xmlns:vprop="http://docs.oasis-open.org/wsbpel/2.0/varprop">
    <types>
        <xsd:schema targetNamespace="http://testing.ws">
            <xsd:import schemaLocation="http://localhost:8080/LameDuckService/LameDuckService?xsd=1" namespace="http://types.lameduck.group8.ws.dtu"/>
            <xsd:complexType name="itineraryType">
                <xsd:sequence>
                    <xsd:element name="hotelBookings" type="tns:bookingItemType" maxOccurs="unbounded" minOccurs="0"></xsd:element>
                    <xsd:element name="flightBookings" type="tns:bookingItemType" maxOccurs="unbounded" minOccurs="0"></xsd:element>
                    <xsd:element name="firstItineraryDate" type="xsd:date"></xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="bookingItemType">
                <xsd:sequence>
                    <xsd:element name="bookingStatus" type="xsd:string"></xsd:element>
                    <xsd:element name="bookingNumber" type="xsd:string"></xsd:element>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:schema>
    </types>
    <message name="createItineraryOperationRequest">
        <part name="customerId" type="xsd:int"/>
        <part name="itineraryId" type="xsd:int"/>
    </message>
    <message name="createItineraryOperationResponse">
        <part name="status" type="xsd:string"/>
    </message>
    <message name="getFlightsOperationRequest">
        <part name="queryFlights" type="ns0:getFlightRequestType"/>
        <part name="CustomerId" type="xsd:int"/>
        <part name="ItineraryId" type="xsd:int"/>
    </message>
    <message name="getFlightsOperationResponse">
        <part name="fligtList" type="ns0:flightInfoListType"/>
    </message>
    <message name="addFlightOperationRequest">
        <part name="customerId" type="xsd:int"/>
        <part name="itineraryId" type="xsd:int"/>
        <part name="bookingNumber" type="xsd:string"/>
    </message>
    <message name="addFlightOperationResponse">
        <part name="status" type="xsd:string"/>
    </message>
    <message name="bookItineraryOperationRequest">
        <part name="customerId" type="xsd:int"/>
        <part name="itineraryId" type="xsd:int"/>
        <part name="creditCardInfo" type="ns0:creditCardInfoType"/>
    </message>
    <message name="bookItineraryOperationResponse">
        <part name="status" type="xsd:string"/>
    </message>
    <message name="cancelItineraryOperationRequest">
        <part name="customerId" type="xsd:int"/>
        <part name="itineraryId" type="xsd:int"/>
    </message>
    <message name="cancelItineraryOperationResponse">
        <part name="status" type="xsd:string"/>
    </message>
    <message name="getItineraryOperationRequest">
        <part name="customerId" type="xsd:int"/>
        <part name="itineraryId" type="xsd:int"/>
    </message>
    <message name="getItineraryOperationResponse">
        <part name="responseItinerary" type="tns:itineraryType"/>
    </message>
    <portType name="TestingWSDLPortType">
        <operation name="createItineraryOperation">
            <input name="input10" message="tns:createItineraryOperationRequest"/>
            <output name="output10" message="tns:createItineraryOperationResponse"/>
        </operation>
        <operation name="getFlightsOperation">
            <input name="input11" message="tns:getFlightsOperationRequest"/>
            <output name="output11" message="tns:getFlightsOperationResponse"/>
        </operation>
        <operation name="addFlightOperation">
            <input name="input12" message="tns:addFlightOperationRequest"/>
            <output name="output12" message="tns:addFlightOperationResponse"/>
        </operation>
        <operation name="bookItineraryOperation">
            <input name="input13" message="tns:bookItineraryOperationRequest"/>
            <output name="output13" message="tns:bookItineraryOperationResponse"/>
        </operation>
        <operation name="cancelItineraryOperation">
            <input name="input14" message="tns:cancelItineraryOperationRequest"/>
            <output name="output14" message="tns:cancelItineraryOperationResponse"/>
        </operation>
        <operation name="getItineraryOperation">
            <input name="input15" message="tns:getItineraryOperationRequest"/>
            <output name="output15" message="tns:getItineraryOperationResponse"/>
        </operation>
    </portType>
    <binding name="TestingWSDLBinding" type="tns:TestingWSDLPortType">
        <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
        <operation name="createItineraryOperation">
            <soap:operation/>
            <input name="input10">
                <soap:body use="literal" namespace="http://testing.ws"/>
            </input>
            <output name="output10">
                <soap:body use="literal" namespace="http://testing.ws"/>
            </output>
        </operation>
        <operation name="getFlightsOperation">
            <soap:operation/>
            <input name="input11">
                <soap:body use="literal" 
                           namespace="http://testing.ws"/>
            </input>
            <output name="output11">
                <soap:body use="literal" 
                           namespace="http://testing.ws"/>
            </output>
        </operation>
        <operation name="addFlightOperation">
            <soap:operation/>
            <input name="input12">
                <soap:body use="literal" namespace="http://testing.ws"/>
            </input>
            <output name="output12">
                <soap:body use="literal" namespace="http://testing.ws"/>
            </output>
        </operation>
        <operation name="bookItineraryOperation">
            <soap:operation/>
            <input name="input13">
                <soap:body use="literal" namespace="http://testing.ws"/>
            </input>
            <output name="output13">
                <soap:body use="literal" namespace="http://testing.ws"/>
            </output>
        </operation>
        <operation name="cancelItineraryOperation">
            <soap:operation/>
            <input name="input14">
                <soap:body use="literal" namespace="http://testing.ws"/>
            </input>
            <output name="output14">
                <soap:body use="literal" namespace="http://testing.ws"/>
            </output>
        </operation>
        <operation name="getItineraryOperation">
            <soap:operation/>
            <input name="input15">
                <soap:body use="literal" namespace="http://testing.ws"/>
            </input>
            <output name="output15">
                <soap:body use="literal" namespace="http://testing.ws"/>
            </output>
        </operation>
    </binding>
    <service name="TestingWSDLService">
        <port name="TestingWSDLPort" binding="tns:TestingWSDLBinding">
            <soap:address location="http://localhost:${HttpDefaultPort}/TestingWSDLService/TestingWSDLPort"/>
        </port>
    </service>
    <plnk:partnerLinkType name="TestingWSDL">
        <!-- A partner link type is automatically generated when a new port type is added. Partner link types are used by BPEL processes. 
In a BPEL process, a partner link represents the interaction between the BPEL process and a partner service. Each partner link is associated with a partner link type.
A partner link type characterizes the conversational relationship between two services. The partner link type can have one or two roles.-->
        <plnk:role name="TestingWSDLPortTypeRole" portType="tns:TestingWSDLPortType"/>
    </plnk:partnerLinkType>
    <vprop:property name="CustomerId" type="xsd:int"/>
    <vprop:property name="ItiernarayId" type="xsd:int"/>
    
    <vprop:propertyAlias propertyName="tns:CustomerId" messageType="tns:createItineraryOperationRequest" part="customerId"/>
    <vprop:propertyAlias propertyName="tns:CustomerId" messageType="tns:getFlightsOperationRequest" part="CustomerId"/>
    <vprop:propertyAlias propertyName="tns:CustomerId" messageType="tns:addFlightOperationRequest" part="customerId"/>
    <vprop:propertyAlias propertyName="tns:CustomerId" messageType="tns:bookItineraryOperationRequest" part="customerId"/>
    <vprop:propertyAlias propertyName="tns:CustomerId" messageType="tns:getItineraryOperationRequest" part="customerId"/>
    <vprop:propertyAlias propertyName="tns:CustomerId" messageType="tns:cancelItineraryOperationRequest" part="customerId"/>
    
    <vprop:propertyAlias propertyName="tns:ItiernarayId" messageType="tns:createItineraryOperationRequest" part="itineraryId"/>
    <vprop:propertyAlias propertyName="tns:ItiernarayId" messageType="tns:getFlightsOperationRequest" part="ItineraryId"/>
    <vprop:propertyAlias propertyName="tns:ItiernarayId" messageType="tns:addFlightOperationRequest" part="itineraryId"/>
    <vprop:propertyAlias propertyName="tns:ItiernarayId" messageType="tns:bookItineraryOperationRequest" part="itineraryId"/>
    <vprop:propertyAlias propertyName="tns:ItiernarayId" messageType="tns:getItineraryOperationRequest" part="itineraryId"/>
    <vprop:propertyAlias propertyName="tns:ItiernarayId" messageType="tns:cancelItineraryOperationRequest" part="itineraryId"/>
</definitions>
