<?xml version="1.0" encoding="UTF-8"?>
<definitions name="TestingWSDL" targetNamespace="http://testing.ws"
    xmlns="http://schemas.xmlsoap.org/wsdl/"
    xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://testing.ws" xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns0="http://types.lameduck.group8.ws.dtu" xmlns:vprop="http://docs.oasis-open.org/wsbpel/2.0/varprop">
    <types>
        <xsd:schema targetNamespace="http://testing.ws">
            <xsd:import schemaLocation="http://localhost:8080/LameDuckService/LameDuckService?xsd=1" namespace="http://types.lameduck.group8.ws.dtu"/>
        </xsd:schema>
    </types>
    <message name="testingRequest">
        <part name="input1" type="xsd:string"/>
        <part name="CustomerId" type="xsd:int"/>
        <part name="ItineraryId" type="xsd:int"/>
    </message>
    <message name="testingResponse">
        <part name="output1" type="xsd:string"/>
    </message>
    <message name="AnotherOperationRequest">
        <part name="input2" type="xsd:string"/>
        <part name="CustomerId" type="xsd:int"/>
        <part name="ItineraryId" type="xsd:int"/>
    </message>
    <message name="AnotherOperationResponse">
        <part name="output2" type="xsd:string"/>
    </message>
    <message name="getFlightsOperationRequest">
        <part name="input3" type="ns0:getFlightRequestType"/>
        <part name="CustomerId" type="xsd:int"/>
        <part name="ItineraryId" type="xsd:int"/>
    </message>
    <message name="getFlightsOperationResponse">
        <part name="output3" type="ns0:flightInfoListType"/>
    </message>
    <portType name="TestingWSDLPortType">
        <operation name="testing">
            <input name="input1" message="tns:testingRequest"/>
            <output name="output1" message="tns:testingResponse"/>
        </operation>
        <operation name="AnotherOperation">
            <input name="input2" message="tns:AnotherOperationRequest"/>
            <output name="output2" message="tns:AnotherOperationResponse"/>
        </operation>
        <operation name="getFlightsOperation">
            <input name="input3" message="tns:getFlightsOperationRequest"/>
            <output name="output3" message="tns:getFlightsOperationResponse"/>
        </operation>
    </portType>
    <binding name="TestingWSDLBinding" type="tns:TestingWSDLPortType">
        <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
        <operation name="testing">
            <soap:operation/>
            <input name="input1">
                <soap:body use="literal" 
                           namespace="http://testing.ws"/>
            </input>
            <output name="output1">
                <soap:body use="literal" 
                           namespace="http://testing.ws"/>
            </output>
        </operation>
        <operation name="AnotherOperation">
            <soap:operation/>
            <input name="input2">
                <soap:body use="literal" 
                           namespace="http://testing.ws"/>
            </input>
            <output name="output2">
                <soap:body use="literal" 
                           namespace="http://testing.ws"/>
            </output>
        </operation>
        <operation name="getFlightsOperation">
            <soap:operation/>
            <input name="input3">
                <soap:body use="literal" 
                           namespace="http://testing.ws"/>
            </input>
            <output name="output3">
                <soap:body use="literal" 
                           namespace="http://testing.ws"/>
            </output>
        </operation>
    </binding>
    <service name="TestingWSDLService">
        <port name="TestingWSDLPort" binding="tns:TestingWSDLBinding">
            <soap:address location="http://localhost:${HttpDefaultPort}/TestingWSDLService/TestingWSDLPort"/>
        </port>
    </service>
    <plnk:partnerLinkType name="TestingWSDL">
        <!-- A partner link type is automatically generated when a new port type is added. Partner link types are used by BPEL processes. 
In a BPEL process, a partner link represents the interaction between the BPEL process and a partner service. Each partner link is associated with a partner link type.
A partner link type characterizes the conversational relationship between two services. The partner link type can have one or two roles.-->
        <plnk:role name="TestingWSDLPortTypeRole" portType="tns:TestingWSDLPortType"/>
    </plnk:partnerLinkType>
    <vprop:property name="CustomerId" type="xsd:int"/>
    <vprop:property name="ItiernarayId" type="xsd:int"/>
    <vprop:propertyAlias propertyName="tns:CustomerId" messageType="tns:testingRequest" part="CustomerId"/>
    <vprop:propertyAlias propertyName="tns:CustomerId" messageType="tns:AnotherOperationRequest" part="CustomerId"/>
    <vprop:propertyAlias propertyName="tns:CustomerId" messageType="tns:getFlightsOperationRequest" part="CustomerId"/>
    <vprop:propertyAlias propertyName="tns:ItiernarayId" messageType="tns:testingRequest" part="ItineraryId"/>
    <vprop:propertyAlias propertyName="tns:ItiernarayId" messageType="tns:AnotherOperationRequest" part="ItineraryId"/>
    <vprop:propertyAlias propertyName="tns:ItiernarayId" messageType="tns:getFlightsOperationRequest" part="ItineraryId"/>
</definitions>
